plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.google.gms.google-services"
    id "dev.flutter.flutter-gradle-plugin"
}

def convertToValidVersionCode(String versionCodeStr) {
    try {
        long versionCode = Long.parseLong(versionCodeStr)
        // If the version code is too large, take the last 9 digits
        if (versionCode > 2147483647) {
            return Integer.parseInt(versionCodeStr.substring(versionCodeStr.length() - 9))
        }
        return versionCode.toInteger()
    } catch (Exception e) {
        return 1
    }
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.islammob.app"
    compileSdk = 36
    ndkVersion = flutter.ndkVersion

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.islammob.app"
        minSdk 23
        targetSdk 35
        versionCode project.hasProperty('versionCode') ? convertToValidVersionCode(project.versionCode.toString()) : 1
        versionName project.hasProperty('versionName') ? project.versionName : "1.0.0"
        multiDexEnabled true
    }

    signingConfigs {
       release {
            if (keystorePropertiesFile.exists()) {
                storeFile file('../androidkeystore.jks')
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storePassword keystoreProperties['storePassword']
            }   
       }
   }

    buildTypes {
        release {
            shrinkResources = true
            signingConfig = signingConfigs.release
            minifyEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // Add these optimizations
            ndk {
                debugSymbolLevel 'SYMBOL_TABLE'
            }
            
            // Additional performance optimizations
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            zipAlignEnabled true
        }
        
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
    }

    lint {
           checkReleaseBuilds false
           disable 'InvalidPackage'
       }
}

flutter {
    source = "../.."
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.13.1'
    implementation platform('com.google.firebase:firebase-bom:33.5.1')
    implementation "androidx.activity:activity-ktx:1.6.1"
    implementation("com.google.firebase:firebase-messaging")
    implementation("com.google.firebase:firebase-perf-ktx")
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'com.android.installreferrer:installreferrer:2.1'
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.core:core-ktx:1.12.0"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
}


