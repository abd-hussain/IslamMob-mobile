name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  android:
    runs-on: ubuntu-latest

    steps:
        - name: üìö Git Checkout
          uses: actions/checkout@v3

        - name: üî• Set Up Java
          uses: actions/setup-java@v3.12.0
          with:
            distribution: 'oracle'
            java-version: '17'

        - name: üê¶ Setup Flutter
          uses: subosito/flutter-action@v2
          with:
            flutter-version: '3.24.1'
            channel: 'stable'
            cache: true
            
        - name: üîë Set up key.properties
          run: |
            echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" > android/key.properties
            echo "storePassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
            echo "keyAlias=${{ secrets.ANDROID_KEY_Alias }}" >> android/key.properties
            echo "${{ secrets.ANDROID_KEY_CONTENT }}" | base64 --decode > android/androidkeystore.jks
            # Optional test command to verify file creation (do not log file content directly for security)
            ls -la android/ # Check if androidkeystore.jks file is generated
            
        - name: üîë Set up local.properties
          run: |
            echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties

        - name: üîë Set up Play Store Secret
          run: |
            echo "${{ secrets.PLAY_STORE_SECRET }}" | base64 --decode > android/play_store_secret.json

        - name: üéØ Setup Fastlane
          uses: ruby/setup-ruby@v1
          with:
              ruby-version: 3.3
              rubygems: latest

        - name: üîé Cleaning before we start
          run: |
              flutter clean
              rm -rf pubspec.lock
    
        - name: üõ†Ô∏è Build and Deploy
          run: |
              flutter pub get
              make deploy-android

  ios:
    runs-on: macos-latest

    steps:
        - name: üìö Set up git and fetch all history for all branches and tags
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        # - name: üì¶ Setup Ruby
        #   uses: ruby/setup-ruby@v1
        #   with:
        #     ruby-version: "3.2"
        
        # - name: üì¶ Bundle install for iOS Gemfile
        #   timeout-minutes: 5
        #   run: cd ./ios && bundle install

        # - name: üê¶ Setup Flutter
        #   uses: subosito/flutter-action@v2
        #   with:
        #     flutter-version: '3.24.1'
        #     channel: 'stable'
        #     cache: true

        # - name: üîé Install Dependencies
        #   run: flutter pub get

        # - name: Build and Deploy to TestFlight
        #   env:
        #     MATCH_PASSWORD: ${{ secrets.IOS_MATCH_PASSWORD }}
        #     MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GIT_BASIC_AUTHORIZATION }}
        #     ASC_KEY_ID: ${{ secrets.APPSTORE_ASC_KEY_ID }}
        #     ASC_ISSUER_ID: ${{ secrets.APPSTORE_ASC_ISSUER_ID }}
        #     ASC_KEY_P8: ${{ secrets.APPSTORE_ASC_KEY_P8 }}
        #   run: |
        #     cd ./ios
        #     bundle exec fastlane release_beta

        # - name: üîë Set up App Store Connect
        #   run: |
        #       echo "${{ secrets.APP_STORE_CONNECT }}" | base64 --decode > ios/app_store_connect.json

        

        # - name: üì¶ Update RubyGems
        #   run: gem update --system

        # - name: üì¶ Cleaning before we start
        #   run: |
        #       flutter clean
        #       cd ios && rm -rf Podfile.lock
        #       cd ios && rm -rf Pods
        #       cd ios && pod install
        #       cd ..
        #       rm -rf pubspec.lock
        #       flutter pub get
    
        # - name: üõ†Ô∏è Build and Deploy
        #   run: |
        #     make deploy-ios
        #   env:
        #     MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        #     MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GIT_BASIC_AUTHORIZATION }}
        #     FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
        #     MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }}
        #     MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}

  