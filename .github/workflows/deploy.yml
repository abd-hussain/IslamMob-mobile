name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  android:
    runs-on: ubuntu-latest

    steps:
        - name: üìö Git Checkout
          uses: actions/checkout@v4

        - name: üî• Set Up Java
          uses: actions/setup-java@v4
          with:
            distribution: 'oracle'
            java-version: '17'

        - name: üîé Clean Gradle Cache (optional)
          run: rm -rf ~/.gradle/caches

        - name: üê¶ Setup Flutter
          uses: subosito/flutter-action@v2
          with:
            flutter-version: '3.32.6'
            channel: 'stable'
            cache: true

        - name: üó≥Ô∏è Flutter gen-l10n
          run: flutter gen-l10n

        - name: üó≥Ô∏è Flutter Pub Get
          run: flutter pub get

        - name: üóÉÔ∏è Generate code (Optional)
          run: flutter pub run build_runner build --delete-conflicting-outputs
            
        - name: üîë Set up key.properties
          env:
            ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
            ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
            ANDROID_KEY_CONTENT: ${{ secrets.ANDROID_KEY_CONTENT }}
          run: |
            if [ -n "$ANDROID_KEY_PASSWORD" ] && [ -n "$ANDROID_KEY_ALIAS" ] && [ -n "$ANDROID_KEY_CONTENT" ]; then
              echo "keyPassword=$ANDROID_KEY_PASSWORD" > android/key.properties
              echo "storePassword=$ANDROID_KEY_PASSWORD" >> android/key.properties
              echo "keyAlias=$ANDROID_KEY_ALIAS" >> android/key.properties
              echo "$ANDROID_KEY_CONTENT" | base64 --decode > android/androidkeystore.jks
              # Optional test command to verify file creation (do not log file content directly for security)
              ls -la android/ # Check if androidkeystore.jks file is generated
            else
              echo "Warning: Android signing secrets not found. Skipping key setup."
            fi
            
        - name: üîë Set up local.properties
          run: |
            echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties
            echo "sdk.dir=$ANDROID_SDK_ROOT" >> android/local.properties

        - name: üîë Set up Play Store Secret
          env:
            PLAY_STORE_SECRET: ${{ secrets.PLAY_STORE_SECRET }}
          run: |
            if [ -n "$PLAY_STORE_SECRET" ]; then
              echo "$PLAY_STORE_SECRET" | base64 --decode > android/play_store_secret.json
            else
              echo "Warning: Play Store secret not found. Skipping Play Store setup."
            fi

        - name: üéØ Setup Fastlane
          uses: ruby/setup-ruby@v1
          with:
              ruby-version: 3.3
              rubygems: latest

        - name: üîé Cleaning cash before we start
          run: |
              flutter clean
              rm -rf ~/.pub-cache
              rm -rf pubspec.lock
              rm -rf $HOME/.gradle/caches
              flutter pub get

        - name: üîç Dump full dependency tree
          run: flutter pub deps --style=compact

        - name: üõ†Ô∏è Build and Deploy
          run: |
              make deploy-android

  ios:
    runs-on: self-hosted

    steps:
        - name: üìö Set up git and fetch all history for all branches and tags
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: üß™ Check Xcode Version
          run: xcodebuild -version

        - name: üê¶ Setup Flutter
          uses: subosito/flutter-action@v2
          with:
            flutter-version: '3.32.6'
            channel: 'stable'
            cache: true

        - name: üó≥Ô∏è Flutter gen-l10n
          run: flutter gen-l10n

        - name: üó≥Ô∏è Flutter Pub Get
          run: flutter pub get
  
        - name: üóÉÔ∏è Generate code (Optional)
          run: flutter pub run build_runner build --delete-conflicting-outputs

        - name: üß∞ Set up App Store Connect
          env:
            APPSTORE_CONNECT: ${{ secrets.APPSTORE_CONNECT }}
          run: |
            if [ -n "$APPSTORE_CONNECT" ]; then
              echo "$APPSTORE_CONNECT" | base64 --decode > ios/app_store_connect.json
            else
              echo "Warning: App Store Connect secret not found. Skipping App Store setup."
            fi

        - name: üéØ Setup Fastlane
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: 3.3
            rubygems: latest
        
            
        - name: üì¶ Cleaning before we start
          run: |
            flutter clean
            cd ios && rm -rf Podfile.lock
            cd ios && pod install
            cd ..
            flutter pub get

        - name: üõ†Ô∏è Build and Deploy
          env:
            MATCH_PASSWORD: ${{ secrets.IOS_MATCH_PASSWORD }}
            MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GIT_BASIC_AUTHORIZATION }}
          run: |
            if [ -n "$MATCH_PASSWORD" ] && [ -n "$MATCH_GIT_BASIC_AUTHORIZATION" ]; then
              make deploy-ios
            else
              echo "Warning: iOS deployment secrets not found. Skipping iOS deployment."
              exit 1
            fi

  